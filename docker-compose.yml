services:
  apiservice_api:
    image: loginwebinar/api-service:latest
    container_name: apiservice_api
    restart: unless-stopped
    volumes:
      - ./keys:/app/keys  # Mount the local 'keys' directory into the container
    ports:
      - "8080:8080"  # Expose the application port
    environment:
      # Optional: You can override or add environment variables here
      NEVER_CHANGE_AFTER_INSTALLATION_32_BYTE_KEY: ${NEVER_CHANGE_AFTER_INSTALLATION_32_BYTE_KEY}
      BUNNY_FONT_API: ${BUNNY_FONT_API}
      GOOGLE_FONT_API: ${GOOGLE_FONT_API}
      POSTGRES_DB_HOST: ${POSTGRES_DB_HOST}
      POSTGRES_DB_PORT: ${POSTGRES_DB_PORT}
      POSTGRES_DB_SCHEMA: ${POSTGRES_DB_SCHEMA}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SWAGGER_KEY: ${SWAGGER_KEY}
      SWAGGER_USERNAME: ${SWAGGER_USERNAME}
      SWAGGER_PASSWORD: ${SWAGGER_PASSWORD}
      HEARTBEAT_WSURL: ${HEARTBEAT_WSURL}
      HEARTBEAT_SCRIPT_LOCATION: ${HEARTBEAT_SCRIPT_LOCATION}
      API_HTTP_PORT: ${API_HTTP_PORT}
      SITE_URL: ${SITE_URL}
    extra_hosts:
      - "postgres.host:host-gateway"
  mainweb_app:
    image: loginwebinar/main-loginwebinar:latest
    container_name: mainweb_app
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - /srv/loginwebinar-standard/public:/usr/src/app/public/uploads
    environment:
      NODE_ENV: production
      NODE_OPTIONS: "--max-old-space-size=4096"
      SITE_URL: ${SITE_URL}
      MAIN_API_URL: ${MAIN_API_URL}
      MANAGER_COOKIE_PREFIX: ${MANAGER_COOKIE_PREFIX}
      VIEWER_COOKIE_PREFIX: ${VIEWER_COOKIE_PREFIX}
      PUBLIC_PEM: ${PUBLIC_PEM}
      VERSION: "1.0"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
