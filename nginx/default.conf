upstream nextjs_app {
    server mainweb_app:3000;
}

upstream api_service {
    server apiservice_api:8080;
}

server {
    listen 80;
    server_name _;
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # File upload size
    client_max_body_size 100M;
    
    # Serve uploaded files directly - MUST come before the catch-all
    location /uploads/ {
        alias /usr/share/nginx/html/uploads/;
        try_files $uri =404;
        
        # Cache settings
        expires 30d;
        add_header Cache-Control "public, immutable";
        
        # Security - only allow specific file types
        location ~ \.(jpg|jpeg|png|gif|pdf|doc|docx|xls|xlsx)$ {
            # Allowed
        }
        
        location ~ \. {
            deny all;
            return 404;
        }
    }
    
    # API routes to the Go service - be specific about API paths
    location /api/v1/ {
        proxy_pass http://api_service;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    location /api/manager/ {
        proxy_pass http://api_service;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Next.js App Router API routes
    location /api/ {
        # Check if it should go to Next.js or the Go service
        # If it's not /api/v1 or /api/manager, it goes to Next.js
        proxy_pass http://nextjs_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Next.js specific static files
    location /_next/static/ {
        proxy_pass http://nextjs_app;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    location /_next/image/ {
        proxy_pass http://nextjs_app;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }
    
    # WebSocket support for HMR in development
    location /_next/webpack-hmr {
        proxy_pass http://nextjs_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # IMPORTANT: This must be last - catch all for Next.js pages
    location / {
        # Don't try to serve files, just proxy everything to Next.js
        proxy_pass http://nextjs_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Important: Don't use try_files here as it will break dynamic routes
        # Let Next.js handle all routing
    }
}